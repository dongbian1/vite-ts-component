import{_ as t,r as p,o as e,c as o,e as c,b as n,d as s,a as l}from"./app-037f133e.js";const i={},u=n("h1",{style:{"text-align":"center"}},"Emoji 瀑布雨",-1),r=n("div",{style:{display:"flex",color:"#999","justify-content":"space-around"}},[n("div",null,"作者：陈佳鑫"),n("div",null,"时间：2022-12-22")],-1),k=n("br",null,null,-1),d=n("p",null,[s("使用"),n("code",null,"createElement"),s("生成一个 div，给 div 设置一个随机横向坐标，坐标为窗口宽度，往 div 中放入一个随机 emoji，使用 css 动画往下掉落，emoji 随机触发爆炸表情，在 emoji 到达指定位置后，开启爆炸 css 动画，爆炸动画完成后删除div")],-1),m=l(`<details class="custom-container details"><summary>点击查看代码</summary><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>
<span class="token operator">/</span>\\<span class="token operator">*</span>\\<span class="token operator">*</span>

<span class="token operator">-</span> 生成随机 Emoji 并且掉落
  \\<span class="token operator">*</span><span class="token operator">/</span>
  <span class="token keyword">const</span> <span class="token function-variable function">runSnow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth
  <span class="token keyword">let</span> height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight

<span class="token keyword">let</span> snow <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 大小</span>
snow<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token function">getRandomInitInclusive</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span>
snow<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div class=&quot;emojiOne&quot;&gt;&amp;#1285</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">getRandomInitInclusive</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
snow<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">&quot;fixed&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 随机生成横向出现位置</span>
<span class="token keyword">const</span> snowLeft <span class="token operator">=</span> <span class="token function">getRandomInitInclusive</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> width <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">)</span>
snow<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> snowLeft <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// 纵向位置固定从最顶上开始</span>
snow<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">&quot;-50px&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 随机下落时间</span>
<span class="token keyword">const</span> sinkTime <span class="token operator">=</span> <span class="token function">getRandomInitInclusive</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> ms <span class="token operator">=</span> sinkTime _ <span class="token number">1000</span>
<span class="token comment">// 随机抓取一个表情放大爆炸</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isStop<span class="token punctuation">.</span>value <span class="token operator">&amp;&amp;</span> <span class="token function">getRandomInitInclusive</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> snowLeft <span class="token operator">&gt;</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
isStop<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token comment">// 随机获取表情爆炸位置</span>
<span class="token keyword">const</span> scrollHeight <span class="token operator">=</span> <span class="token function">getRandomInitInclusive</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> height <span class="token operator">-</span> <span class="token number">80</span><span class="token punctuation">)</span>
<span class="token comment">// 设置动画下落位置</span>
snow<span class="token punctuation">.</span>style<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&#39;--dm-scroll-height&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>scrollHeight<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token comment">// 设置动画时间</span>
snow<span class="token punctuation">.</span>style<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&#39;--dm-scroll-ms&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sinkTime<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">s</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token comment">// 设置元素清除时间为所有动画结束后=下落时间+爆炸时间</span>
ms <span class="token operator">+=</span> <span class="token number">4000</span>
<span class="token comment">// console.log(sinkTime, emojiSinkTime, ms)</span>
<span class="token comment">// 上一个动画结束后元素已到达规定位置，及从新设置元素开启爆炸动画</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
snow<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> scrollHeight <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span>
snow<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&#39;emoji&#39;</span>
isStop<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> sinkTime _ <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
snow<span class="token punctuation">.</span>style<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&#39;--dm-scroll-height&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>height<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
snow<span class="token punctuation">.</span>style<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&#39;--dm-scroll-ms&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sinkTime<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">s</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;master&quot;</span><span class="token punctuation">)</span><span class="token operator">?.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>snow<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
snow<span class="token punctuation">.</span>parentNode<span class="token operator">?.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>snow<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> ms<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div></details>`,1);function v(b,g){const a=p("EmojiWaterfall");return e(),o("div",null,[u,r,k,d,c(a),m])}const w=t(i,[["render",v],["__file","EmojiWaterfall.html.vue"]]);export{w as default};
