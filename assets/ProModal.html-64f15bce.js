import{_ as p,r as a,o as i,c as d,b as t,d as n,e as s,a as c}from"./app-037f133e.js";const r={},u=t("h1",{style:{"text-align":"center"}},"ProModal API",-1),k=t("div",{style:{display:"flex",color:"#999","justify-content":"space-around"}},[t("div",null,"作者：陈佳鑫"),t("div",null,"时间：2023-07-20")],-1),g=t("br",null,null,-1),y={id:"cjx-zdy-ui项目仓库",tabindex:"-1"},f=t("a",{class:"header-anchor",href:"#cjx-zdy-ui项目仓库","aria-hidden":"true"},"#",-1),m={href:"https://github.com/dongbian1/vite-ts-component",target:"_blank",rel:"noopener noreferrer"},x=t("h3",{id:"图片展示",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#图片展示","aria-hidden":"true"},"#"),n(" 图片展示")],-1),v=t("br",null,null,-1),h=["src"],b=t("h3",{id:"代码展示",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#代码展示","aria-hidden":"true"},"#"),n(" 代码展示")],-1),_=t("br",null,null,-1),q=c(`<details class="custom-container details"><summary>点击查看代码</summary><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onAdd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>打开Modal框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProModal</span> <span class="token attr-name">:column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modalColumn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:modal</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modalProps<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:form</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>proModalRef<span class="token punctuation">&quot;</span></span> <span class="token attr-name">validate</span>
    <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onSubmit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- &lt;template #footer&gt;
      &lt;div class=&quot;dialog-footer&quot; style=&quot;text-align: end;&quot;&gt;
        &lt;el-button&gt;Cancel&lt;/el-button&gt;
        &lt;el-button type=&quot;primary&quot;&gt;
          Confirm
        &lt;/el-button&gt;
      &lt;/div&gt;
    &lt;/template&gt; --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ProModal</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ProModal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cjx-zdy-ui&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> EnterFormProps<span class="token punctuation">,</span> ProModalInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cjx-zdy-ui/lib/src/proModal/types&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> DialogProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus/es/components/dialog&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> proModalRef <span class="token operator">=</span> ref<span class="token operator">&lt;</span>ProModalInstance<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token literal-property property">modalColumn</span><span class="token operator">:</span> EnterFormProps<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;奖品名&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;awardName&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Please input Activity name&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">&#39;blur&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// {</span>
  <span class="token comment">//   label: &#39;奖品名1&#39;, prop: &#39;awardName1&#39;, render: (scope) =&gt; {</span>
  <span class="token comment">//     return &lt;el-input modelValue={value.awardName1} placeholder=&quot;请输入奖品名1&quot; /&gt;</span>
  <span class="token comment">//   },</span>
  <span class="token comment">// },</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;奖品名&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;awardName2&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;select&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">enum</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;测试奖品&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enterProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">clearable</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Please input Activity name&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">&#39;blur&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token keyword">const</span> modalProps <span class="token operator">=</span> reactive<span class="token operator">&lt;</span>Partial<span class="token operator">&lt;</span>DialogProps<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;测试Modal&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> value <span class="token operator">=</span> reactive<span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token punctuation">[</span>k<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> any <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">awardName</span><span class="token operator">:</span> <span class="token number">11111</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">onAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  proModalRef<span class="token punctuation">.</span>value<span class="token operator">?.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">formData</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">awardName</span><span class="token operator">:</span> <span class="token string">&#39;22222&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;测试0002&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">onSubmit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">val</span><span class="token operator">:</span> boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm i cjx-zdy-ui

yarn install cjx-zdy-ui
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="引用-main-ts" tabindex="-1"><a class="header-anchor" href="#引用-main-ts" aria-hidden="true">#</a> 引用 main.ts</h3><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>import CjxUI from &#39;cjx-zdy-ui&#39;

app.use(CjxUI)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="promodal-属性" tabindex="-1"><a class="header-anchor" href="#promodal-属性" aria-hidden="true">#</a> ProModal 属性</h3><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">说明</th><th style="text-align:left;">类型</th><th style="text-align:left;">必传</th><th style="text-align:left;">可选值</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;">v-model</td><td style="text-align:left;">from表单中数据</td><td style="text-align:left;">{ [k: string]: any}</td><td style="text-align:left;">false</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">column</td><td style="text-align:left;">输入项配置</td><td style="text-align:left;"><a href="#enterformprops-属性"><code>EnterFormProps[]</code></a></td><td style="text-align:left;">true</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">validate</td><td style="text-align:left;">是否由组件validate验证 默认true, 如果传入插槽footer则需要自验证</td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">false</td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">true</td></tr><tr><td style="text-align:left;">modal</td><td style="text-align:left;">Dialog 属性，根据 element plus 官方文档来传递</td><td style="text-align:left;"><code>DialogProps</code></td><td style="text-align:left;">false</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">form</td><td style="text-align:left;">Form 属性，根据 element plus 官方文档来传递</td><td style="text-align:left;"><code>FormProps</code></td><td style="text-align:left;">false</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr></tbody></table><h3 id="enterformprops-属性" tabindex="-1"><a class="header-anchor" href="#enterformprops-属性" aria-hidden="true">#</a> EnterFormProps 属性</h3><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">说明</th><th style="text-align:left;">类型</th><th style="text-align:left;">必传</th><th style="text-align:left;">可选值</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;">el</td><td style="text-align:left;">当前项输入框的类型</td><td style="text-align:left;"><code>input</code> <code>input-number</code> <code>autocomplete</code> <code>select</code> <code>select-v2</code> <code>tree-select</code> <code>cascader</code> <code>date-picker</code> <code>time-picker</code> <code>time-select</code> <code>switch</code> <code>slider</code> <code>radio</code> <code>checkbox</code> <code>upload</code> <code>rate</code></td><td style="text-align:left;">false</td><td style="text-align:left;">-</td><td style="text-align:left;"><code>input</code></td></tr><tr><td style="text-align:left;">label</td><td style="text-align:left;">当前项标题</td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">true</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">prop</td><td style="text-align:left;">当前from项prop属性</td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">true</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">rules</td><td style="text-align:left;">当前from项校验规则</td><td style="text-align:left;"><code>object</code></td><td style="text-align:left;">false</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">enum</td><td style="text-align:left;">枚举类型（字典）</td><td style="text-align:left;"><a href="#enumprops-属性"><code>EnumProps[]</code></a> <code>((params?: any) =&gt; Promise&lt;any&gt;)</code></td><td style="text-align:left;">false</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">fieldNames</td><td style="text-align:left;">指定 <code>label</code> <code>value</code> <code>children</code> 的 key 值</td><td style="text-align:left;"><a href="#fieldnamesprops-属性"><code>FieldNamesProps</code></a></td><td style="text-align:left;">false</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">enterProps</td><td style="text-align:left;">输入项参数，根据 element plus 官方文档来传递，该属性所有值会透传到组件</td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">false</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">render</td><td style="text-align:left;">自定义输入项内容渲染（tsx语法），使用render需要搭配v-modal使用实现数据双向绑定</td><td style="text-align:left;"><code>(scope: RenderScope&lt;T&gt;) =&gt; VNode string</code></td><td style="text-align:left;">false</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr></tbody></table><h3 id="enumprops-属性" tabindex="-1"><a class="header-anchor" href="#enumprops-属性" aria-hidden="true">#</a> EnumProps 属性</h3><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">说明</th><th style="text-align:left;">类型</th><th style="text-align:left;">必传</th><th style="text-align:left;">可选值</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;">label</td><td style="text-align:left;">选项框显示的文字</td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">true</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">value</td><td style="text-align:left;">选项框值</td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">true</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">disabled</td><td style="text-align:left;">是否禁用此选项</td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">false</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">tagType</td><td style="text-align:left;">当 tag 为 true 时，此选择会指定 tag 显示类型</td><td style="text-align:left;"><code>success</code> <code>info</code> <code>warning</code> <code>danger</code></td><td style="text-align:left;">false</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">children</td><td style="text-align:left;">为树形选择时，可以通过 children 属性指定子选项</td><td style="text-align:left;"><code>EnumProps[]</code></td><td style="text-align:left;">false</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr></tbody></table><h3 id="fieldnamesprops-属性" tabindex="-1"><a class="header-anchor" href="#fieldnamesprops-属性" aria-hidden="true">#</a> FieldNamesProps 属性</h3><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">说明</th><th style="text-align:left;">类型</th><th style="text-align:left;">必传</th><th style="text-align:left;">可选值</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;">label</td><td style="text-align:left;">选项框显示的文字</td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">true</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">value</td><td style="text-align:left;">选项框值</td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">true</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">children</td><td style="text-align:left;">选项框子选项</td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">false</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr></tbody></table><h3 id="插槽" tabindex="-1"><a class="header-anchor" href="#插槽" aria-hidden="true">#</a> 插槽</h3><table><thead><tr><th style="text-align:left;">事件名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">header</td><td style="text-align:left;">对话框标题的内容；会替换标题部分，但不会移除关闭按钮。</td></tr><tr><td style="text-align:left;">title</td><td style="text-align:left;">与 header 作用相同 请使用 header</td></tr><tr><td style="text-align:left;">footer</td><td style="text-align:left;">Dialog 按钮操作区的内容</td></tr></tbody></table><h3 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h3><table><thead><tr><th style="text-align:left;">事件名</th><th style="text-align:left;">说明</th><th style="text-align:left;">参数</th></tr></thead><tbody><tr><td style="text-align:left;">submit</td><td style="text-align:left;">确定按钮触发事件如果使用<code>footer</code>插槽将不会触发</td><td style="text-align:left;">form 表单数据</td></tr></tbody></table>`,17);function P(e,w){const l=a("ExternalLinkIcon"),o=a("ProModal");return i(),d("div",null,[u,k,g,t("h2",y,[f,n(),t("a",m,[n("cjx-zdy-ui项目仓库"),s(l)])]),x,v,t("img",{class:"avatar",src:e.$withBase("/ProModal.jpg")},null,8,h),b,_,s(o),q])}const j=p(r,[["render",P],["__file","ProModal.html.vue"]]);export{j as default};
