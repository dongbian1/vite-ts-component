import{_ as n,o as a,c as s,a as t}from"./app-037f133e.js";const e={},p=t(`<h1 style="text-align:center;">自定义React Hooks useModal</h1><div style="display:flex;color:#999;justify-content:space-around;"><div>作者：陈佳鑫</div><div>时间：2023-2-7</div></div><br><p>使用 React Hooks 自定义 use 开发，适用于 modal 弹出框状态管理，减少使用 modal 多参数定义</p><h3 id="类型声明" tabindex="-1"><a class="header-anchor" href="#类型声明" aria-hidden="true">#</a> 类型声明</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IModalProps<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  visible<span class="token operator">:</span> <span class="token builtin">boolean</span>
  type<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;update&#39;</span>
  data<span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">visible</td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">是否展示 modal 框</td></tr><tr><td style="text-align:left;">type</td><td style="text-align:left;"><code>add</code> <code>update</code></td><td style="text-align:left;">add：新增， update：修改</td></tr><tr><td style="text-align:left;">data</td><td style="text-align:left;">T</td><td style="text-align:left;">存储数据</td></tr></tbody></table><h3 id="usemodalprops-类型" tabindex="-1"><a class="header-anchor" href="#usemodalprops-类型" aria-hidden="true">#</a> useModalProps 类型</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useModalProps</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  props<span class="token operator">?</span><span class="token operator">:</span> IModalProps<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  IModalProps<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    showModal<span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> type<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;update&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
    <span class="token function-variable function">hideModal</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
    <span class="token function-variable function">setModalData</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
    <span class="token function-variable function">cleanModalData</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
    <span class="token function-variable function">closeEmptyModalData</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">showModal</td><td style="text-align:left;"><code>Function(data, type): void</code></td><td style="text-align:left;">打开 modal 框 data: 需要存储的数据，type: 打开类型</td></tr><tr><td style="text-align:left;">hideModal</td><td style="text-align:left;"><code>Function(): void</code></td><td style="text-align:left;">隐藏 modal 框</td></tr><tr><td style="text-align:left;">setModalData</td><td style="text-align:left;"><code>Function(data): void</code></td><td style="text-align:left;">更新 data 数据</td></tr><tr><td style="text-align:left;">cleanModalData</td><td style="text-align:left;"><code>Function(): void</code></td><td style="text-align:left;">清除 data 数据</td></tr><tr><td style="text-align:left;">closeEmptyModalData</td><td style="text-align:left;"><code>Function(): void</code></td><td style="text-align:left;">modal 框关闭后清除 data 数据</td></tr></tbody></table><h3 id="整体代码" tabindex="-1"><a class="header-anchor" href="#整体代码" aria-hidden="true">#</a> 整体代码</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useModalProps</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  props<span class="token operator">?</span><span class="token operator">:</span> IModalProps<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  IModalProps<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    showModal<span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> type<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;update&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
    <span class="token function-variable function">hideModal</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
    <span class="token function-variable function">setModalData</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
    <span class="token function-variable function">cleanModalData</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
    <span class="token function-variable function">closeEmptyModalData</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>_modalData<span class="token punctuation">,</span> _setModalData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>
    props <span class="token operator">??</span> <span class="token punctuation">{</span> visible<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span>
  <span class="token punctuation">)</span>

  <span class="token keyword">const</span> showModal <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> type<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;update&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">_setModalData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      visible<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      type<span class="token operator">:</span> type<span class="token punctuation">,</span>
      data
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">hideModal</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">_setModalData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      visible<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      data<span class="token operator">:</span> _modalData<span class="token punctuation">.</span>data<span class="token operator">!</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">setModalData</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">_setModalData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      visible<span class="token operator">:</span> _modalData<span class="token punctuation">.</span>visible<span class="token punctuation">,</span>
      type<span class="token operator">:</span> _modalData<span class="token punctuation">.</span>type<span class="token punctuation">,</span>
      data
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">cleanModalData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">_setModalData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      visible<span class="token operator">:</span> _modalData<span class="token punctuation">.</span>visible<span class="token punctuation">,</span>
      data<span class="token operator">:</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">closeEmptyModalData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">_setModalData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      visible<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      data<span class="token operator">:</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">[</span>
    _modalData<span class="token punctuation">,</span>
    <span class="token punctuation">{</span> showModal<span class="token punctuation">,</span> hideModal<span class="token punctuation">,</span> cleanModalData<span class="token punctuation">,</span> setModalData<span class="token punctuation">,</span> closeEmptyModalData <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-usemodal" tabindex="-1"><a class="header-anchor" href="#使用-usemodal" aria-hidden="true">#</a> 使用 useModal</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>useModal<span class="token punctuation">,</span> useModalController<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useModalProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,14),o=[p];function l(c,i){return a(),s("div",null,o)}const r=n(e,[["render",l],["__file","useModal.html.vue"]]);export{r as default};
