import{_ as n,o as s,c as a,a as t}from"./app-037f133e.js";const p={},e=t(`<h1 style="text-align:center;">批量下载图片</h1><div style="display:flex;color:#999;justify-content:space-around;"><div>作者：陈佳鑫</div><div>时间：2023-03-31</div></div><br><p>使用<code>jszip</code>压缩图片打包成 ZIP，通过<code>file-saver</code>进行浏览器下载</p><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npm install jszip
npm install file-saver
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>根据不同时间段，不同人员，进行文件夹分类，最后整体打包 zip 通过浏览器下载</p><h3 id="代码块" tabindex="-1"><a class="header-anchor" href="#代码块" aria-hidden="true">#</a> 代码块</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> JSZip <span class="token keyword">from</span> <span class="token string">&#39;jszip&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> saveAs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;file-saver&#39;</span>

<span class="token keyword">interface</span> <span class="token class-name">Img</span> <span class="token punctuation">{</span>
  imgUrl<span class="token operator">:</span> <span class="token builtin">string</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  dayTime<span class="token operator">:</span> <span class="token builtin">string</span>
  time<span class="token operator">:</span> <span class="token builtin">string</span>
  customerName<span class="token operator">:</span> <span class="token builtin">string</span>
  employeeName<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">//转换图片为base64格式</span>
<span class="token keyword">const</span> <span class="token function-variable function">getImageBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span>image<span class="token operator">:</span> HTMLImageElement<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 创建一个画布</span>
  <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// 让画布的宽高等于图片的宽高</span>
  canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> image<span class="token punctuation">.</span>width
  canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> image<span class="token punctuation">.</span>height
  <span class="token comment">// 然后在画布上进行画画</span>
  <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// 开始画图片，1.绘制的对象2.绘制的位置，3绘制的宽高</span>
  ctx<span class="token operator">?.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> image<span class="token punctuation">.</span>width<span class="token punctuation">,</span> image<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
  <span class="token keyword">return</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 批量下载图片
 * <span class="token keyword">@param</span> <span class="token parameter">sourceList</span> 需要下载图片对象
 * <span class="token keyword">@param</span> <span class="token parameter">zipName</span> 压缩包名称
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">downloadZip</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>sourceList<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>Img<span class="token operator">&gt;</span><span class="token punctuation">,</span> zipName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//创建一个压缩对象</span>
    <span class="token keyword">const</span> zip <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSZip</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 创建 zipName 文件夹</span>
    <span class="token keyword">const</span> fileFolder <span class="token operator">=</span> zip<span class="token punctuation">.</span><span class="token function">folder</span><span class="token punctuation">(</span>zipName<span class="token punctuation">)</span>
    <span class="token keyword">const</span> fileList<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> img<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
      sourceList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> timeFolder <span class="token operator">=</span> fileFolder<span class="token operator">?.</span><span class="token function">folder</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>dayTime<span class="token punctuation">)</span>
        <span class="token keyword">let</span> employeeFolder <span class="token operator">=</span> timeFolder<span class="token operator">?.</span><span class="token function">folder</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>employeeName<span class="token punctuation">)</span>
        <span class="token comment">//压缩后的每张图片对应名</span>
        <span class="token keyword">const</span> name <span class="token operator">=</span> item<span class="token punctuation">.</span>name
        <span class="token comment">//创建图片对象 设置图片基本信息</span>
        <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// 设置 crossOrigin 属性，解决图片跨域报错</span>
        image<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;crossOrigin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Anonymous&#39;</span><span class="token punctuation">)</span>
        <span class="token comment">//设置图片地址----稍后进行base64转换</span>
        image<span class="token punctuation">.</span>src <span class="token operator">=</span> item<span class="token punctuation">.</span>imgUrl
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          image<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//路径base64转换</span>
            <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getImageBase64</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span>
            <span class="token comment">//图片名称</span>
            <span class="token keyword">const</span> fileName <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>customerName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
            <span class="token comment">//去掉base64文件标识，img是文件形式</span>
            <span class="token keyword">const</span> fileImg <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span>
            employeeFolder<span class="token operator">?.</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.png</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> fileImg<span class="token punctuation">,</span> <span class="token punctuation">{</span>
              base64<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
              <span class="token comment">// STORE：默认不压缩 DEFLATE：需要压缩</span>
              compression<span class="token operator">:</span> <span class="token string">&#39;DEFLATE&#39;</span><span class="token punctuation">,</span>
              <span class="token comment">// 压缩等级1~9    1压缩速度最快，9最优压缩方式</span>
              compressionOptions<span class="token operator">:</span> <span class="token punctuation">{</span>
                level<span class="token operator">:</span> <span class="token number">9</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">//确保数据不为空</span>
      <span class="token comment">// 压缩的结果为blob类型（二进制流）,可用作文件上传</span>
      zip<span class="token punctuation">.</span><span class="token function">generateAsync</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;blob&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 直接在浏览器打成zipName.zip包并下载，saveAs依赖的js是FileSaver.js</span>
        <span class="token function">saveAs</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>zipName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.zip</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;打包完成&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","DownloadZip.html.vue"]]);export{r as default};
